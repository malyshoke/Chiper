// grons.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <ctime>
#include <string>
#include <iostream>
#include <conio.h>

using namespace std;

int main()
{

    string B; string C; string D;
    setlocale(LC_ALL, "Rus");

    cout << "Введите сообщение: " << endl;
    cin >> B;
    cout << "Введите ключ: " << endl;
    cin >> C;
    int c = C.size(); //делаем замену переменных для удобства
    int b = B.size();
    int k = 0;

    if (b >= c)
    {
        for (int i = 0; i < (b / c); i++)
        {
            D = D + C; //Записываем целое количество ключа. Растягивая ключ по длине слова.
        }
        for (int j = 0; j < (b % c); j++)
        {
            D = D + C[j];
        }
    }
      else  //Иначе если ключ длиннее слова, укорачиваем ключ до длины слова.
    {
        for (int s = 0; s < b; s++)
        {
            D = D + C[s];
        }
    }
    cout << "Новый ключ: "<< D << endl;

    for (int i = 0; i < b; i++) {
        k = (int)(D[i]);
        B[i] += k;
    }
    cout << B << endl;
    //ДЕШИФРАЦИЯ
    cout << "Введите декодированное сообщение: " << endl;
    cin >> B;
    cout << "Введите ключ: " << endl;
    cin >> C;
    if (b >= c)
    {
        for (int i = 0; i < (b / c); i++)
        {
            D = D + C; //Записываем целое количество ключа. Растягивая ключ по длине слова.
        }
        for (int j = 0; j < (b % c); j++)
        {
            D = D + C[j];
        }
    }
    else  //Иначе если ключ длиннее слова, укорачиваем ключ до длины слова.
    {
        for (int s = 0; s < b; s++)
        {
            D = D + C[s];
        }
    }
    cout << "Новый ключ: " << D << endl;
    for (int i = 0; i < b; i++) {
        k = (int)(D[i]);
        B[i] -= k;
    }
    cout << B << endl;

    _getch();
   return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
